{
  "files": [
    {
      "name": ".editorconfig",
      "uniqueName": ".editorconfig",
      "use": "scc",
      "lines": [
        "# EditorConfig is awesome:",
        "http://EditorConfig.org",
        "",
        "# top-most EditorConfig file",
        "root = true",
        "",
        "# Don't use tabs for indentation.",
        "[*]",
        "indent_style = space",
        "# (Please don't specify an indent_size here; that has too many unintended consequences.)",
        "",
        "# Code files",
        "[*.cs,*.csx,*.vb,*.vbx]",
        "indent_size = 4",
        "",
        "# Xml project files",
        "[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]",
        "indent_size = 2",
        "",
        "# Xml config files",
        "[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]",
        "indent_size = 2",
        "",
        "[*.xml]",
        "indent_size = 2",
        "",
        "# JSON files",
        "[*.json]",
        "indent_size = 2"
      ]
    },
    {
      "name": ".gitattributes",
      "uniqueName": ".gitattributes",
      "use": "scc",
      "lines": [
        "# Set the default behavior, in case people don't have core.autocrlf set.",
        "* text=auto",
        "",
        "# Explicitly declare text files you want to always be normalized and converted",
        "# to native line endings on checkout.",
        "*.c text",
        "*.h text",
        "",
        "# Declare files that will always have CRLF line endings on checkout.",
        "*.sln text eol=crlf",
        "",
        "# Denote all files that are truly binary and should not be modified.",
        "*.png binary",
        "*.jpg binary",
        "",
        "# Custom for Visual Studio",
        "*.cs     diff=csharp eol=crlf",
        "",
        "# Standard to msysgit",
        "*.doc\t diff=astextplain",
        "*.DOC\t diff=astextplain",
        "*.docx diff=astextplain",
        "*.DOCX diff=astextplain",
        "*.dot  diff=astextplain",
        "*.DOT  diff=astextplain",
        "*.pdf  diff=astextplain",
        "*.PDF\t diff=astextplain",
        "*.rtf\t diff=astextplain",
        "*.RTF\t diff=astextplain"
      ]
    },
    {
      "name": ".gitignore",
      "uniqueName": ".gitignore",
      "use": "scc",
      "lines": [
        "## Ignore Visual Studio temporary files, build results, and",
        "## files generated by popular Visual Studio add-ons.",
        "",
        "# User-specific files",
        "*.suo",
        "*.user",
        "*.userosscache",
        "*.sln.docstates",
        "",
        "# User-specific files (MonoDevelop/Xamarin Studio)",
        "*.userprefs",
        "",
        "# Build results",
        "[Dd]ebug/",
        "[Dd]ebugPublic/",
        "[Rr]elease/",
        "[Rr]eleases/",
        "x64/",
        "x86/",
        "bld/",
        "[Bb]in/",
        "[Oo]bj/",
        "[Ll]og/",
        "",
        "!Build",
        "",
        "# Visual Studio 2015 cache/options directory",
        ".vs/",
        "# Uncomment if you have tasks that create the project's static files in wwwroot",
        "#wwwroot/",
        "",
        "# MSTest test Results",
        "[Tt]est[Rr]esult*/",
        "[Bb]uild[Ll]og.*",
        "",
        "# NUNIT",
        "*.VisualState.xml",
        "TestResult.xml",
        "",
        "# Build Results of an ATL Project",
        "[Dd]ebugPS/",
        "[Rr]eleasePS/",
        "dlldata.c",
        "",
        "# DNX",
        "project.lock.json",
        "artifacts/",
        "",
        "*_i.c",
        "*_p.c",
        "*_i.h",
        "*.ilk",
        "*.meta",
        "*.obj",
        "*.pch",
        "*.pdb",
        "*.pgc",
        "*.pgd",
        "*.rsp",
        "*.sbr",
        "*.tlb",
        "*.tli",
        "*.tlh",
        "*.tmp",
        "*.tmp_proj",
        "*.log",
        "*.vspscc",
        "*.vssscc",
        ".builds",
        "*.pidb",
        "*.svclog",
        "*.scc",
        "",
        "# Chutzpah Test files",
        "_Chutzpah*",
        "",
        "# Visual C++ cache files",
        "ipch/",
        "*.aps",
        "*.ncb",
        "*.opendb",
        "*.opensdf",
        "*.sdf",
        "*.cachefile",
        "*.VC.db",
        "*.VC.VC.opendb",
        "",
        "# Visual Studio profiler",
        "*.psess",
        "*.vsp",
        "*.vspx",
        "*.sap",
        "",
        "# TFS 2012 Local Workspace",
        "$tf/",
        "",
        "# Guidance Automation Toolkit",
        "*.gpState",
        "",
        "# ReSharper is a .NET coding add-in",
        "_ReSharper*/",
        "*.[Rr]e[Ss]harper",
        "*.DotSettings.user",
        "",
        "# JustCode is a .NET coding add-in",
        ".JustCode",
        "",
        "# TeamCity is a build add-in",
        "_TeamCity*",
        "",
        "# DotCover is a Code Coverage Tool",
        "*.dotCover",
        "",
        "# NCrunch",
        "_NCrunch_*",
        ".*crunch*.local.xml",
        "nCrunchTemp_*",
        "",
        "# MightyMoose",
        "*.mm.*",
        "AutoTest.Net/",
        "",
        "# Web workbench (sass)",
        ".sass-cache/",
        "",
        "# Installshield output folder",
        "[Ee]xpress/",
        "",
        "# DocProject is a documentation generator add-in",
        "DocProject/buildhelp/",
        "DocProject/Help/*.HxT",
        "DocProject/Help/*.HxC",
        "DocProject/Help/*.hhc",
        "DocProject/Help/*.hhk",
        "DocProject/Help/*.hhp",
        "DocProject/Help/Html2",
        "DocProject/Help/html",
        "",
        "# Click-Once directory",
        "publish/",
        "",
        "# Publish Web Output",
        "*.[Pp]ublish.xml",
        "*.azurePubxml",
        "# TODO: Comment the next line if you want to checkin your web deploy settings",
        "# but database connection strings (with potential passwords) will be unencrypted",
        "*.pubxml",
        "*.publishproj",
        "",
        "# Microsoft Azure Web App publish settings. Comment the next line if you want to",
        "# checkin your Azure Web App publish settings, but sensitive information contained",
        "# in these scripts will be unencrypted",
        "PublishScripts/",
        "",
        "# NuGet Packages",
        "#*.nupkg",
        "# The packages folder can be ignored because of Package Restore",
        "**/packages/*",
        "# except build/, which is used as an MSBuild target.",
        "!**/packages/build/",
        "# Uncomment if necessary however generally it will be regenerated when needed",
        "#!**/packages/repositories.config",
        "# NuGet v3's project.json files produces more ignoreable files",
        "*.nuget.props",
        "*.nuget.targets",
        "",
        "# Microsoft Azure Build Output",
        "csx/",
        "*.build.csdef",
        "",
        "# Microsoft Azure Emulator",
        "ecf/",
        "rcf/",
        "",
        "# Windows Store app package directories and files",
        "AppPackages/",
        "BundleArtifacts/",
        "Package.StoreAssociation.xml",
        "_pkginfo.txt",
        "",
        "# Visual Studio cache files",
        "# files ending in .cache can be ignored",
        "*.[Cc]ache",
        "# but keep track of directories ending in .cache",
        "!*.[Cc]ache/",
        "",
        "# Others",
        "ClientBin/",
        "~$*",
        "*~",
        "*.dbmdl",
        "*.dbproj.schemaview",
        "*.pfx",
        "*.publishsettings",
        "node_modules/",
        "orleans.codegen.cs",
        "",
        "# Since there are multiple workflows, uncomment next line to ignore bower_components",
        "# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)",
        "#bower_components/",
        "",
        "# RIA/Silverlight projects",
        "Generated_Code/",
        "",
        "# Backup & report files from converting an old project file",
        "# to a newer Visual Studio version. Backup files are not needed,",
        "# because we have git ;-)",
        "_UpgradeReport_Files/",
        "Backup*/",
        "UpgradeLog*.XML",
        "UpgradeLog*.htm",
        "",
        "# SQL Server files",
        "*.mdf",
        "*.ldf",
        "",
        "# Business Intelligence projects",
        "*.rdl.data",
        "*.bim.layout",
        "*.bim_*.settings",
        "",
        "# Microsoft Fakes",
        "FakesAssemblies/",
        "",
        "# GhostDoc plugin setting file",
        "*.GhostDoc.xml",
        "",
        "# Node.js Tools for Visual Studio",
        ".ntvs_analysis.dat",
        "",
        "# Visual Studio 6 build log",
        "*.plg",
        "",
        "# Visual Studio 6 workspace options file",
        "*.opt",
        "",
        "# Visual Studio LightSwitch build output",
        "**/*.HTMLClient/GeneratedArtifacts",
        "**/*.DesktopClient/GeneratedArtifacts",
        "**/*.DesktopClient/ModelManifest.xml",
        "**/*.Server/GeneratedArtifacts",
        "**/*.Server/ModelManifest.xml",
        "_Pvt_Extensions",
        "",
        "# Paket dependency manager",
        ".paket/paket.exe",
        "paket-files/",
        "",
        "# FAKE - F# Make",
        ".fake/",
        "",
        "# JetBrains Rider",
        ".idea/",
        "*.sln.iml",
        "",
        "# =========================",
        "# Operating System Files",
        "# =========================",
        "",
        "# OSX",
        "# =========================",
        "",
        ".DS_Store",
        ".AppleDouble",
        ".LSOverride",
        "",
        "# Thumbnails",
        "._*",
        "",
        "# Files that might appear in the root of a volume",
        ".DocumentRevisions-V100",
        ".fseventsd",
        ".Spotlight-V100",
        ".TemporaryItems",
        ".Trashes",
        ".VolumeIcon.icns",
        "",
        "# Directories potentially created on remote AFP share",
        ".AppleDB",
        ".AppleDesktop",
        "Network Trash Folder",
        "Temporary Items",
        ".apdisk",
        "",
        "# Windows",
        "# =========================",
        "",
        "# Windows image file caches",
        "Thumbs.db",
        "ehthumbs.db",
        "",
        "# Folder config file",
        "Desktop.ini",
        "",
        "# Recycle Bin used on file shares",
        "$RECYCLE.BIN/",
        "",
        "# Windows Installer files",
        "*.cab",
        "*.msi",
        "*.msm",
        "*.msp",
        "",
        "# Windows shortcuts",
        "*.lnk"
      ]
    },
    {
      "name": "Build.cmd",
      "use": "script",
      "lines": [
        "@echo off",
        "setlocal enabledelayedexpansion",
        "",
        "set BatchFile=%0",
        "set Root=%~dp0",
        "set BuildConfiguration=Debug",
        "set MSBuildTarget=Build",
        "set NodeReuse=true",
        "set DeveloperCommandPrompt=%VS150COMNTOOLS%\\VsDevCmd.bat",
        "set MSBuildAdditionalArguments=/m",
        "set DeployVsixExtension=true",
        "",
        ":ParseArguments",
        "if \"%1\" == \"\" goto :DoneParsing",
        "if /I \"%1\" == \"/?\" call :Usage && exit /b 1",
        "if /I \"%1\" == \"/debug\" set BuildConfiguration=Debug&&shift&& goto :ParseArguments",
        "if /I \"%1\" == \"/release\" set BuildConfiguration=Release&&shift&& goto :ParseArguments",
        "if /I \"%1\" == \"/clean\" set MSBuildTarget=Clean&&shift&& goto :ParseArguments",
        "if /I \"%1\" == \"/rebuild\" set MSBuildTarget=Rebuild&&shift&& goto :ParseArguments",
        "if /I \"%1\" == \"/restore\" set MSBuildTarget=RestorePackages&&shift&& goto :ParseArguments",
        "if /I \"%1\" == \"/no-deploy-extension\" set DeployVsixExtension=false&&shift&& goto :ParseArguments",
        "call :Usage && exit /b 1",
        ":DoneParsing",
        "",
        "",
        "set BinariesDirectory=%Root%Binaries\\%BuildConfiguration%\\",
        "set LogFile=%BinariesDirectory%Build.log",
        "call :PrintColor Gray \"Setting LogFile=%LogFile%\"",
        "call :PrintColor Gray \"Setting BinariesDirectory=%Root%Binaries\\%BuildConfiguration%\\\"",
        "if not exist \"%BinariesDirectory%\" mkdir \"%BinariesDirectory%\" || goto :BuildFailed",
        "",
        "REM Restore the NuGet packages",
        "call \"%Root%\\Restore.cmd\" || goto :BuildFailed",
        "",
        "REM Get Developer Command Prompt",
        "if \"%VisualStudioVersion%\" == \"\" (",
        "  call \"%DeveloperCommandPrompt%\" || goto :BuildFailed",
        ")",
        "",
        "",
        "msbuild /nologo /consoleloggerparameters:Verbosity=minimal /fileLogger /fileloggerparameters:LogFile=\"%LogFile%\";verbosity=diagnostic /t:\"%MSBuildTarget%\" /p:Configuration=\"%BuildConfiguration%\" /p:DeployVsixExtension=\"%DeployVsixExtension%\" \"%Root%Build\\Build.proj\" %MSBuildAdditionalArguments%",
        "if ERRORLEVEL 1 (",
        "    echo.",
        "    call :PrintColor Red \"Build failed, for full log see %LogFile%.\"",
        "    exit /b 1",
        ")",
        "",
        "echo.",
        "call :PrintColor Green \"Build completed successfully, for full log see %LogFile%\"",
        "exit /b 0",
        "",
        ":Usage",
        "echo Usage: %BatchFile% [/rebuild^|/rebuild^|/restore^] [/debug^|/release] [/no-deploy-extension]",
        "echo.",
        "echo   Build targets:",
        "echo     /clean                   Only clean the solution",
        "echo     /rebuild                 Perform a clean, then build",
        "echo     /restore                 Only restore NuGet packages",
        "echo.",
        "echo   Build options:",
        "echo     /debug                   Perform debug build (default)",
        "echo     /release                 Perform release build",
        "echo     /no-deploy-extension     Does not deploy the VSIX extension when building the solution",
        "echo.",
        "goto :eof",
        "",
        ":BuildFailed",
        "call :PrintColor Red \"Build failed with ERRORLEVEL %ERRORLEVEL%\"",
        "exit /b 1",
        "",
        ":PrintColor",
        "\"%Windir%\\System32\\WindowsPowerShell\\v1.0\\Powershell.exe\" write-host -foregroundcolor %1 \"'%2'\""
      ]
    },
    {
      "name": "Build.ps1",
      "use": "script",
      "lines": [
        "#",
        "# Copyright (c) .NET Foundation and contributors. All rights reserved.",
        "# Licensed under the MIT license. See LICENSE file in the project root for full license information.",
        "#",
        "",
        "param(",
        "    [validateset('Debug','Release')]",
        "    [string]$Configuration=\"Debug\",",
        "    [string]$Platform=\"Any CPU\",",
        "    [validateset('minimal','diagnostic')]",
        "    [string]$Verbosity=\"minimal\",",
        "    [switch]$SkipTests,",
        "    [switch]$RealSign,",
        "    [switch]$Help)",
        "",
        "if($Help)",
        "{",
        "    Write-Host \"Usage: .\\build.ps1 [Options]\"",
        "    Write-Host \"\"",
        "    Write-Host \"Options:\"",
        "    Write-Host \"  -Configuration <CONFIGURATION>     Build the specified Configuration (Debug or Release, default: Debug)\"",
        "    Write-Host \"  -Platform <PLATFORM>               Build the specified Platform (Any CPU)\"",
        "    Write-Host \"  -Verbosity <VERBOSITY>             Build console output verbosity (minimal or diagnostic, default: minimal)\"",
        "    Write-Host \"  -SkipTests                         Skip executing unit tests\"",
        "    Write-Host \"  -RealSign                          Sign the output DLLs\"",
        "    Write-Host \"  -Help                              Display this help message\"",
        "    exit 0",
        "}",
        "",
        "$RepoRoot = \"$PSScriptRoot\"",
        "$env:NUGET_PACKAGES = \"$RepoRoot\\packages\"",
        "$DotnetCLIVersion = Get-Content \"$RepoRoot\\DotnetCLIVersion.txt\"",
        "",
        "# Use a repo-local install directory (but not the bin directory because that gets cleaned a lot)",
        "if (!$env:DOTNET_INSTALL_DIR)",
        "{",
        "    $env:DOTNET_INSTALL_DIR=\"$RepoRoot\\.dotnet_cli\\\"",
        "}",
        "",
        "if (!(Test-Path $env:DOTNET_INSTALL_DIR))",
        "{",
        "    mkdir $env:DOTNET_INSTALL_DIR | Out-Null",
        "}",
        "",
        "if ($Verbosity -eq 'diagnostic') {",
        "    $dotnetInstallVerbosity = \"-Verbose\"",
        "}",
        "",
        "# Install a stage 0",
        "$DOTNET_INSTALL_SCRIPT_URL=\"https://raw.githubusercontent.com/Ollon/Docs/master/Build.ps1\"",
        "Invoke-WebRequest $DOTNET_INSTALL_SCRIPT_URL -OutFile \"$env:DOTNET_INSTALL_DIR\\dotnet-install.ps1\"",
        "",
        "& \"$env:DOTNET_INSTALL_DIR\\dotnet-install.ps1\" -Version $DotnetCLIVersion $dotnetInstallVerbosity",
        "if($LASTEXITCODE -ne 0) { throw \"Failed to install stage0\" }",
        "",
        "# Put the stage0 on the path",
        "$env:PATH = \"$env:DOTNET_INSTALL_DIR;$env:PATH\"",
        "",
        "# Disable first run since we want to control all package sources",
        "$env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1",
        "",
        "$logPath = \"$RepoRoot\\bin\\log\"",
        "if (!(Test-Path -Path $logPath)) {",
        "    New-Item -Path $logPath -Force -ItemType 'Directory' | Out-Null",
        "}",
        "",
        "$signType = 'public'",
        "if ($RealSign) {",
        "    $signType = 'real'",
        "}",
        "",
        "$buildTarget = 'Build'",
        "if ($SkipTests) {",
        "    $buildTarget = 'BuildWithoutTesting'",
        "}",
        "",
        "$commonBuildArgs = echo $RepoRoot\\build\\build.proj /t:$buildTarget /m /nologo /p:Configuration=$Configuration /p:Platform=$Platform /p:SignType=$signType /verbosity:$Verbosity",
        "",
        "# NET Core Build ",
        "$msbuildSummaryLog = Join-Path -path $logPath -childPath \"sdk.log\"",
        "$msbuildWarningLog = Join-Path -path $logPath -childPath \"sdk.wrn\"",
        "$msbuildFailureLog = Join-Path -path $logPath -childPath \"sdk.err\"",
        "",
        "dotnet msbuild $commonBuildArgs /flp1:Summary`;Verbosity=diagnostic`;Encoding=UTF-8`;LogFile=$msbuildSummaryLog /flp2:WarningsOnly`;Verbosity=diagnostic`;Encoding=UTF-8`;LogFile=$msbuildWarningLog /flp3:ErrorsOnly`;Verbosity=diagnostic`;Encoding=UTF-8`;LogFile=$msbuildFailureLog",
        "if($LASTEXITCODE -ne 0) { throw \"Failed to build\" }",
        "",
        "# Template Build",
        "$msbuildSummaryLog = Join-Path -path $logPath -childPath \"templates.log\"",
        "$msbuildWarningLog = Join-Path -path $logPath -childPath \"templates.wrn\"",
        "$msbuildFailureLog = Join-Path -path $logPath -childPath \"templates.err\"",
        "",
        "# TODO: https://github.com/dotnet/sdk/issues/342: convert Templates\\* from project.json to PackageReference ",
        "# In the meantime, use Windows nuget.exe v3.4.4 to restore packages for the templates solution.",
        "$nugetDir = \"$RepoRoot\\.nuget\"",
        "if (!(Test-Path $nugetDir))",
        "{",
        "    mkdir $nugetDir",
        "}",
        "",
        "$nuget = \"$nugetDir\\nuget.exe\"",
        "if (!(Test-Path $nuget))",
        "{",
        "    Invoke-WebRequest \"https://dist.nuget.org/win-x86-commandline/v3.4.4/NuGet.exe\" -OutFile $nuget",
        "}",
        "",
        "& $nuget restore $RepoRoot\\sdk-templates.sln",
        "if($LASTEXITCODE -ne 0) { throw \"Failed to restore nuget packages for templates\" }",
        "",
        "msbuild $commonBuildArgs /nr:false /p:BuildTemplates=true /flp1:Summary`;Verbosity=diagnostic`;Encoding=UTF-8`;LogFile=$msbuildSummaryLog /flp2:WarningsOnly`;Verbosity=diagnostic`;Encoding=UTF-8`;LogFile=$msbuildWarningLog /flp3:ErrorsOnly`;Verbosity=diagnostic`;Encoding=UTF-8`;LogFile=$msbuildFailureLog",
        "if($LASTEXITCODE -ne 0) { throw \"Failed to build templates\" }"
      ]
    },
    {
      "name": "NuGet.Config",
      "use": "build",
      "lines": [
        "<?xml version=\"1.0\" encoding=\"utf-8\"?>",
        "<configuration>",
        "  <solution>",
        "    <add key=\"disableSourceControlIntegration\" value=\"true\" />",
        "  </solution>",
        "  <packageSources>",
        "    <clear />",
        "    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />",
        "    <add key=\"myget.org ollon-build-tools\" value=\"https://www.myget.org/F/ollon-build-tools/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org cli-deps\" value=\"https://dotnet.myget.org/F/cli-deps/api/v3/index.json\" />",
        "    <add key=\"myget.org xunit\" value=\"https://www.myget.org/F/xunit/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org dotnet-coreclr\" value=\"https://dotnet.myget.org/F/dotnet-coreclr/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org dotnet-core\" value=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org dotnet-corefxtestdata\" value=\"https://dotnet.myget.org/F/dotnet-corefxtestdata/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org dotnet-buildtools\" value=\"https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org symreader\" value=\"https://dotnet.myget.org/F/symreader/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org symreader-portable\" value=\"https://dotnet.myget.org/F/symreader-portable/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org interactive-window\" value=\"https://dotnet.myget.org/F/interactive-window/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org roslyn-master-nightly\" value=\"https://dotnet.myget.org/F/roslyn-master-nightly/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org devcore\" value=\"https://www.myget.org/F/vs-devcore/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org roslyn-tools\" value=\"https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json\" />",
        "    <add key=\"dotnet.myget.org roslyn\" value=\"https://dotnet.myget.org/F/roslyn/api/v3/index.json\" />",
        "    <add key=\"myget.org vs-editor\" value=\"https://myget.org/F/vs-editor/api/v3/index.json\" />",
        "  </packageSources>",
        "  <packageRestore>",
        "    <add key=\"enabled\" value=\"True\" />",
        "    <add key=\"automatic\" value=\"True\" />",
        "  </packageRestore>",
        "  <bindingRedirects>",
        "    <add key=\"skip\" value=\"False\" />",
        "  </bindingRedirects>",
        "  <apikeys>",
        "    <add key=\"https://www.myget.org/F/ollon-build-tools/api/v2/package\" value=\"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAANu+vlDeTwEGHlvoNGsxrQgAAAAACAAAAAAAQZgAAAAEAACAAAABOqA9PWfbZ4orNIkoS/ouyBJ751veRR0qYTT+Uy/rdbQAAAAAOgAAAAAIAACAAAABCKVwHr1FAzygqptdi4dIrzNrp6f9v4nDkpOzwZABF9zAAAAB6abPyqyFJbcoRl6vj5WRfH1Acrmf35iSWLxQzK220lClDOL36514ZRG4gFQ5q35ZAAAAABmK0YN0iyUTaOJVKPjWyJRCl38BqFn7EPHcyKu9MBnU1sKUD1hT9u4DHJlxLbjzY8+UIQUHd/O0BdCjVXf7fGw==\" />",
        "  </apikeys>",
        "</configuration>"
      ]
    },
    {
      "name": "Restore.cmd",
      "use": "script",
      "lines": [
        "@echo off",
        "setlocal enabledelayedexpansion",
        "",
        "set RepositoryRoot=%~dp0",
        "set DevDivPackages=%RepositoryRoot%src\\Setup\\DevDivPackages",
        "",
        ":ParseArguments",
        "if /I \"%1\" == \"/?\" goto :Usage",
        "if /I \"%1\" == \"/clean\" set RestoreClean=true&&shift&& goto :ParseArguments",
        "if /I \"%1\" == \"/fast\" set RestoreFast=true&&shift&& goto :ParseArguments",
        "goto :DoneParsing",
        "",
        ":DoneParsing",
        "",
        "REM Allow for alternate solutions to be passed as restore targets.",
        "set Solution=%1",
        "if \"%Solution%\" == \"\" set Solution=%RepositoryRoot%\\RepoUtil.sln",
        "",
        "REM Load in the inforation for NuGet",
        "call \"%RepositoryRoot%build\\scripts\\LoadNuGetInfo.cmd\" || goto :LoadNuGetInfoFailed",
        "",
        "if \"%RestoreClean%\" == \"true\" (",
        "    echo Clearing the NuGet caches",
        "    call \"%NugetExe%\" locals all -clear || goto :CleanFailed",
        ")",
        "",
        "if \"%RestoreFast%\" == \"\" (",
        "    echo Deleting project.lock.json files",
        "    pushd \"%RepositoryRoot%src\"",
        "    echo \"Dummy lock file to avoid error when there is no project.lock.json file\" > project.lock.json",
        "    del /s /q project.lock.json > nul",
        "    popd",
        ")",
        "",
        "echo Restoring packages: Tools",
        "call \"%NugetExe%\" restore \"%RepositoryRoot%build\\Targets\\Solution.Project.json\" %NuGetAdditionalCommandLineArgs% || goto :RestoreFailed",
        "",
        "echo Locating MSBuild for Solution restore",
        "call \"%RepositoryRoot%SetDevCommandPrompt.cmd\" || goto :RestoreFailed",
        "",
        "REM If we have an applocal copy of MSBuild, pass it to NuGet.  Otherwise, assume NuGet knows how to find it.",
        "if exist \"%DevenvDir%\\..\\..\\MSBuild\\15.0\\Bin\\MSBuild.exe\" (",
        "    set NuGetAdditionalCommandLineArgs=%NuGetAdditionalCommandLineArgs% -msbuildpath \"%DevenvDir%\\..\\..\\MSBuild\\15.0\\Bin\"",
        ")",
        "",
        "echo Restoring packages: VSX (this may take some time)",
        "call \"%NugetExe%\" restore \"%Solution%\" %NuGetAdditionalCommandLineArgs% || goto :RestoreFailed",
        "",
        "",
        "",
        "exit /b 0",
        "",
        ":CleanFailed",
        "echo Clean failed with ERRORLEVEL %ERRORLEVEL% --> Restore.cmd",
        "exit /b 1",
        "",
        ":RestoreFailed",
        "echo Restore failed with ERRORLEVEL %ERRORLEVEL% --> Restore.cmd",
        "exit /b 1",
        "",
        ":LoadNuGetInfoFailed",
        "echo Error loading NuGet.exe information %ERRORLEVEL% --> Restore.cmd",
        "exit /b 1",
        "",
        ":Usage",
        "@echo Usage: Restore.cmd /clean [Solution File]",
        "exit /b 1",
        "",
        ":PrintColor",
        "\"%Windir%\\System32\\WindowsPowerShell\\v1.0\\Powershell.exe\" write-host -foregroundcolor %1 \"'%2'\""
      ]
    },
    {
      "name": "SetDevCommandPrompt.cmd",
      "use": "script",
      "lines": [
        "@echo off",
        "",
        ":: Prefer building with Dev15 and try the simple route first (we may be running from a DevCmdPrompt already)",
        "set CommonToolsDir=%VS150COMNTOOLS%",
        "",
        ":: VS150COMNTOOLS is not set globally any more, so fall back to using the managed query api before trying Dev14",
        "if not exist \"%CommonToolsDir%\" for /f \"usebackq delims=\" %%v in (`powershell -noprofile -executionPolicy Bypass -file \"%~dp0build\\scripts\\locate-vs.ps1\"`) do set \"CommonToolsDir=%%v\"",
        "if not exist \"%CommonToolsDir%\" set CommonToolsDir=%VS140COMNTOOLS%",
        "if not exist \"%CommonToolsDir%\" exit /b 1",
        "",
        ":: VsDevCmd.bat has new behavior where it will change your working directory to a special folder if you have ever cloned from the VsDevCmd window, push and pop the current directory to workaround this",
        "pushd %~dp0",
        "call \"%CommonToolsDir%\\VsDevCmd.bat\"",
        "popd",
        "",
        "exit /b 0"
      ]
    },
    {
      "name": "Build.proj",
      "use": "build",
      "lines": [
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "",
        "  <PropertyGroup>",
        "    <RepositoryRootDirectory>$(MSBuildThisFileDirectory)..\\</RepositoryRootDirectory>",
        "",
        "    <!-- Make note NUGET_PACKAGES is environment variable respected",
        "         by NuGet.exe, so don't be tempted to change the name.-->",
        "    <NUGET_PACKAGES Condition=\"'$(NUGET_PACKAGES)' == ''\">$(UserProfile)\\.nuget\\packages</NUGET_PACKAGES>",
        "",
        "    <CommonMSBuildGlobalProperties>",
        "      Configuration=$(Configuration);",
        "    </CommonMSBuildGlobalProperties>",
        "    ",
        "  </PropertyGroup>",
        "",
        "  <ItemGroup>",
        "    <SolutionFile Include=\"$(RepositoryRootDirectory)RepoUtil.sln\" />",
        "    <NuGetProjectFile Include=\"$(RepositoryRootDirectory)src\\Nuget\\Nuget.proj\" />",
        "  </ItemGroup>",
        "",
        "  <PropertyGroup>",
        "    <!-- NuGet will not automatically find the correct version of MSBuild. We need to specify the path. -->",
        "    <NugetArguments>-verbosity quiet -msbuildpath &quot;$(DevenvDir)\\..\\..\\MSBuild\\15.0\\bin&quot;</NugetArguments>",
        "  </PropertyGroup>",
        "",
        "  <Target Name=\"RestorePackages\">",
        "",
        "    <Message Text=\"Restoring packages for %(SolutionFile.Filename)\" Importance=\"high\" />",
        "",
        "    <Exec Command=\"&quot;$(RepositoryRootDirectory)NuGet.exe&quot; restore $(NugetArguments) &quot;@(SolutionFile)&quot;\" />",
        "  </Target>",
        "",
        "  <Target Name=\"BuildSolution\">",
        "",
        "    <Message Text=\"Building %(SolutionFile.Filename) [$(Configuration)]\" Importance=\"high\" />",
        "",
        "    <MSBuild BuildInParallel=\"true\"",
        "             Projects=\"@(SolutionFile)\"",
        "             Targets=\"Build\"",
        "             Properties=\"$(CommonMSBuildGlobalProperties)\"",
        "             />",
        "  </Target>",
        "",
        "  <Target Name=\"RebuildSolution\">",
        "",
        "    <Message Text=\"Rebuilding %(SolutionFile.Filename) [$(Configuration)]\" Importance=\"high\" />",
        "",
        "    <MSBuild BuildInParallel=\"true\"",
        "             Projects=\"@(SolutionFile)\"",
        "             Targets=\"Rebuild\"",
        "             Properties=\"$(CommonMSBuildGlobalProperties)\"",
        "             />",
        "  </Target>",
        "",
        "  <Target Name=\"BuildNuGetPackages\">",
        "",
        "    <MSBuild BuildInParallel=\"true\"",
        "             Projects=\"@(NuGetProjectFile)\"",
        "             Targets=\"Build\"",
        "             Properties=\"$(CommonMSBuildGlobalProperties)\"",
        "               />",
        "  </Target>",
        "",
        "  <Target Name=\"RebuildNuGetPackages\">",
        "",
        "    <MSBuild BuildInParallel=\"true\"",
        "             Projects=\"@(NuGetProjectFile)\"",
        "             Targets=\"Rebuild\"",
        "             Properties=\"$(CommonMSBuildGlobalProperties)\"",
        "               />",
        "  </Target>",
        "",
        "",
        "  <Target Name=\"Build\" DependsOnTargets=\"RestorePackages;BuildSolution;BuildNuGetPackages\" />",
        "  <Target Name=\"Rebuild\" DependsOnTargets=\"RestorePackages;RebuildSolution;RebuildNuGetPackages\" />",
        "",
        "</Project>"
      ]
    },
    {
      "name": "ProducesNoOutput.Imports.targets",
      "use": "build",
      "lines": [
        "<?xml version=\"1.0\" encoding=\"utf-8\"?>",
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "",
        "  <PropertyGroup>",
        "    <MSBuildTargetsLanguageName>CSharp</MSBuildTargetsLanguageName>",
        "  </PropertyGroup>",
        "",
        "  <PropertyGroup>",
        "    <MSBuildTargetsFilePath>$(MSBuildToolsPath)\\Microsoft.$(MSBuildTargetsLanguageName).targets</MSBuildTargetsFilePath>",
        "  </PropertyGroup>",
        "",
        "  <Import Project=\"$(MSBuildTargetsFilePath)\" />",
        "",
        "  <PropertyGroup>",
        "    <TargetPath></TargetPath>    <!-- Prevent projects referencing this from trying to pass us to the compiler -->",
        "  </PropertyGroup>",
        "",
        "  <Target Name=\"CoreCompile\" />                               <!-- Prevent Csc from being called -->",
        "  <Target Name=\"GenerateTargetFrameworkMonikerAttribute\" />   <!-- Don't generate TFM attribute -->",
        "  <Target Name=\"RuntimeImplementationProjectOutputGroup\" />   <!-- Group always attempts resolve runtime, regardless of <CopyNuGetImplementations>-->",
        "  <Target Name=\"GetReferenceAssemblyPaths\" />                 <!-- Don't go looking for framewoek reference assemblies-->",
        "  <Target Name=\"GetFrameworkPaths\"  />                        <!-- ^ -->",
        "",
        "</Project>"
      ]
    },
    {
      "name": "ProducesNoOutput.Settings.props",
      "use": "build",
      "lines": [
        "<?xml version=\"1.0\" encoding=\"utf-8\"?>",
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "",
        "  <!-- Return this back when up-to-date bug is fixed (projects are being build everytime) -->",
        "  <Import Project=\"VSX.Settings.props\" />",
        "",
        "  <PropertyGroup>",
        "    <IsDeployment Condition=\"'$(IsDeployment)' == ''\">false</IsDeployment>",
        "    <IsPortable Condition=\"'$(IsPortable)' == ''\">true</IsPortable>",
        "  </PropertyGroup>",
        "",
        "  <PropertyGroup Condition=\"'$(IsDeployment)' == 'false'\">",
        "    <UseCommonOutputDirectory>true</UseCommonOutputDirectory>",
        "    <OutputPath>bin</OutputPath>",
        "  </PropertyGroup>",
        "",
        "  <PropertyGroup>",
        "    <!-- Return this back when up-to-date bug is fixed (projects are being build everytime) -->",
        "    <!--<CopyBuildOutputToOutputDirectory>false</CopyBuildOutputToOutputDirectory>",
        "        <CopyOutputSymbolsToOutputDirectory>false</CopyOutputSymbolsToOutputDirectory>-->",
        "    <OutputType>Library</OutputType>",
        "  </PropertyGroup>",
        "",
        "  <PropertyGroup Condition=\"'$(IsPortable)' == 'true'\">",
        "    <TargetFrameworkIdentifier>.NETPortable</TargetFrameworkIdentifier>",
        "    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>",
        "    <TargetFrameworkProfile/>",
        "  </PropertyGroup>",
        "",
        "  <PropertyGroup Condition=\"'$(IsPortable)' != 'true'\">",
        "    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>",
        "    <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>",
        "  </PropertyGroup>",
        "",
        "</Project>"
      ]
    },
    {
      "name": "Solution.project.json",
      "use": "build",
      "lines": [
        "{",
        "  \"dependencies\": {",
        "    \"Ollon.VisualStudio.Setup.Configuration\": \"1.0.0\",",
        "  },",
        "  \"frameworks\": {",
        "    \".NETFramework,Version=v4.6.2\": {}",
        "  },",
        "  \"runtimes\": {",
        "    \"win\": {}",
        "  }",
        "}"
      ]
    },
    {
      "name": "VSX.AssemblyInfo.targets",
      "use": "build",
      "lines": [
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "",
        "  <!--",
        "    ============================================================",
        "                                     GenerateAssemblyInfo",
        "",
        "    Generates assembly info source to intermediate directory",
        "    ============================================================",
        "    -->",
        "",
        "  <PropertyGroup>",
        "    <Company Condition=\"'$(Company)'==''\">Ollon, LLC</Company>",
        "    <Copyright Condition=\"'$(Copyright)'==''\">© 2017 Ollon, LLC. All Rights Reserved.</Copyright>",
        "    <Description Condition=\"'$(Description)'==''\">$(AssemblyName)</Description>",
        "    <Product Condition=\"'$(Product)'==''\">$(AssemblyName)</Product>",
        "",
        "    <AssemblyTitle Condition=\"'$(AssemblyTitle)'==''\">$(AssemblyName)</AssemblyTitle>",
        "    <NetralLanguage Condition=\"'$(NetralLanguage)'==''\">en-US</NetralLanguage>",
        "    ",
        "    <AssemblyVersion Condition=\"'$(AssemblyVersion)'==''\">2.1.0.0</AssemblyVersion>",
        "    ",
        "    <FileVersion Condition=\"'$(FileVersion)'==''\"></FileVersion>",
        "    ",
        "  </PropertyGroup>",
        "  ",
        "  <PropertyGroup>",
        "    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>",
        "    <GeneratedAssemblyInfoFile Condition=\"'$(GeneratedAssemblyInfoFile)' ==''\">$(IntermediateOutputPath)GeneratedAssemblyInfo_$(AssemblyVersion).cs</GeneratedAssemblyInfoFile>",
        "    <GenerateAssemblyInfo Condition=\"'$(GenerateAssemblyInfo)' == ''\">true</GenerateAssemblyInfo>",
        "  </PropertyGroup>",
        "",
        "  <PropertyGroup Condition=\"'$(GenerateAssemblyInfo)' == 'true'\">",
        "    <GenerateAssemblyCompanyAttribute Condition=\"'$(GenerateAssemblyCompanyAttribute)' == ''\">true</GenerateAssemblyCompanyAttribute>",
        "    <GenerateAssemblyConfigurationAttribute Condition=\"'$(GenerateAssemblyConfigurationAttribute)' == ''\">true</GenerateAssemblyConfigurationAttribute>",
        "    <GenerateAssemblyCopyrightAttribute Condition=\"'$(GenerateAssemblyCopyrightAttribute)' == ''\">true</GenerateAssemblyCopyrightAttribute>",
        "    <GenerateAssemblyDescriptionAttribute Condition=\"'$(GenerateAssemblyDescriptionAttribute)' == ''\">true</GenerateAssemblyDescriptionAttribute>",
        "    <GenerateAssemblyFileVersionAttribute Condition=\"'$(GenerateAssemblyFileVersionAttribute)' == ''\">false</GenerateAssemblyFileVersionAttribute>",
        "    <GenerateAssemblyInformationalVersionAttribute Condition=\"'$(GenerateAssemblyInformationalVersionAttribute)' == ''\">true</GenerateAssemblyInformationalVersionAttribute>",
        "    <GenerateAssemblyProductAttribute Condition=\"'$(GenerateAssemblyProductAttribute)' == ''\">true</GenerateAssemblyProductAttribute>",
        "    <GenerateAssemblyTitleAttribute Condition=\"'$(GenerateAssemblyTitleAttribute)' == ''\">true</GenerateAssemblyTitleAttribute>",
        "    <GenerateAssemblyVersionAttribute Condition=\"'$(GenerateAssemblyVersionAttribute)' == ''\">true</GenerateAssemblyVersionAttribute>",
        "    <GenerateNeutralResourcesLanguageAttribute Condition=\"'$(GenerateNeutralResourcesLanguageAttribute)' == ''\">true</GenerateNeutralResourcesLanguageAttribute>",
        "  </PropertyGroup>",
        "",
        "  <!-- ",
        "    Note that this must run before every invocation of CoreCompile to ensure that all compiler",
        "    runs see the generated assembly info. There is at least one scenario involving Xaml ",
        "    where CoreCompile is invoked without other potential hooks such as Compile or CoreBuild,",
        "    etc., so we hook directly on to CoreCompile. Furthermore, we  must run *after* ",
        "    PrepareForBuild to ensure that the intermediate directory has been created.",
        "   -->",
        "  <Target Name=\"GenerateAssemblyInfo\"",
        "          BeforeTargets=\"CoreCompile\"",
        "          DependsOnTargets=\"PrepareForBuild;CoreGenerateAssemblyInfo\"",
        "          Condition=\"'$(GenerateAssemblyInfo)' == 'true'\" />",
        "",
        "  <Target Name=\"CoreGenerateAssemblyInfo\"",
        "          Condition=\"'$(Language)'=='VB' or '$(Language)'=='C#'\"",
        "          Inputs=\"$(MSBuildAllProjects)\"",
        "          Outputs=\"$(GeneratedAssemblyInfoFile)\">",
        "    <ItemGroup>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyCompanyAttribute\" Condition=\"'$(Company)' != '' and '$(GenerateAssemblyCompanyAttribute)' == 'true'\">",
        "        <_Parameter1>$(Company)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyConfigurationAttribute\" Condition=\"'$(Configuration)' != '' and '$(GenerateAssemblyConfigurationAttribute)' == 'true'\">",
        "        <_Parameter1>$(Configuration)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyCopyrightAttribute\" Condition=\"'$(Copyright)' != '' and '$(GenerateAssemblyCopyrightAttribute)' == 'true'\">",
        "        <_Parameter1>$(Copyright)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyDescriptionAttribute\" Condition=\"'$(Description)' != '' and '$(GenerateAssemblyDescriptionAttribute)' == 'true'\">",
        "        <_Parameter1>$(Description)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyFileVersionAttribute\" Condition=\"'$(FileVersion)' != '' and '$(GenerateAssemblyFileVersionAttribute)' == 'true'\">",
        "        <_Parameter1>$(FileVersion)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyInformationalVersionAttribute\" Condition=\"'$(Version)' != '' and '$(GenerateAssemblyInformationalVersionAttribute)' == 'true'\">",
        "        <_Parameter1>$(AssemblyVersion)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyProductAttribute\" Condition=\"'$(Product)' != '' and '$(GenerateAssemblyProductAttribute)' == 'true'\">",
        "        <_Parameter1>$(Product)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyTitleAttribute\" Condition=\"'$(AssemblyTitle)' != '' and '$(GenerateAssemblyTitleAttribute)' == 'true'\">",
        "        <_Parameter1>$(AssemblyTitle)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Reflection.AssemblyVersionAttribute\" Condition=\"'$(AssemblyVersion)' != '' and '$(GenerateAssemblyVersionAttribute)' == 'true'\">",
        "        <_Parameter1>$(AssemblyVersion)</_Parameter1>",
        "      </AssemblyAttribute>",
        "      <AssemblyAttribute Include=\"System.Resources.NeutralResourcesLanguageAttribute\" Condition=\"'$(NeutralLanguage)' != '' and '$(GenerateNeutralResourcesLanguageAttribute)'\">",
        "        <_Parameter1>$(NeutralLanguage)</_Parameter1>",
        "      </AssemblyAttribute>",
        "    </ItemGroup>",
        "    <WriteCodeFragment AssemblyAttributes=\"@(AssemblyAttribute)\" Language=\"$(Language)\" OutputFile=\"$(GeneratedAssemblyInfoFile)\">",
        "      <Output TaskParameter=\"OutputFile\" ItemName=\"Compile\" />",
        "      <Output TaskParameter=\"OutputFile\" ItemName=\"FileWrites\" />",
        "    </WriteCodeFragment>",
        "  </Target>",
        "  ",
        "</Project>"
      ]
    },
    {
      "name": "VSX.Imports.targets",
      "use": "build",
      "lines": [
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "",
        "  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />",
        "",
        "  <Import Project=\"VSX.AssemblyInfo.targets\" />",
        "",
        "  <Import Project=\"VSX.InternalsVisibleTo.targets\" />",
        "",
        "  <Import Project=\"VSX.References.targets\" />",
        "",
        "  <Import Project=\"VSX.VsSDK.targets\" Condition=\"'$(ImportVSSDKTargets)'=='true'\" />",
        "  ",
        "</Project>"
      ]
    },
    {
      "name": "VSX.InternalsVisibleTo.targets",
      "use": "build",
      "lines": [
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "  <PropertyGroup>",
        "    <GeneratedInternalsVisibleToFile>$(IntermediateOutputPath)GeneratedInternalsVisibleTo.cs</GeneratedInternalsVisibleToFile>",
        "  </PropertyGroup>",
        "",
        "  <PropertyGroup>",
        "    <CoreCompileDependsOn>GenerateInternalsVisibleToFile;$(CoreCompileDependsOn)</CoreCompileDependsOn>",
        "  </PropertyGroup>",
        "",
        "  <ItemDefinitionGroup>",
        "    <InternalsVisibleTo>",
        "      <Visible>false</Visible>",
        "    </InternalsVisibleTo>",
        "  </ItemDefinitionGroup>",
        "",
        "  <PropertyGroup Condition=\"'$(PublicKey)' != '' and '$(SignAssembly)' == 'True'\">",
        "    <InternalsVisibleToSuffix>, PublicKey=$(PublicKey)</InternalsVisibleToSuffix>",
        "  </PropertyGroup>",
        "",
        "  <Target Name=\"GenerateInternalsVisibleToFile\"",
        "          Inputs=\"$(MSBuildThisFileFullPath);$(MSBuildProjectFile)\"",
        "          Outputs=\"$(GeneratedInternalsVisibleToFile)\"",
        "          DependsOnTargets=\"PrepareForBuild\"",
        "          Condition=\"'@(InternalsVisibleTo)' != ''\">",
        "",
        "    <CreateItem Include=\"System.Runtime.CompilerServices.InternalsVisibleToAttribute\"",
        "                AdditionalMetadata=\"_Parameter1=%(InternalsVisibleTo.Identity)$(InternalsVisibleToSuffix)\"",
        "                Condition=\"'@(InternalsVisibleTo)' != ''\">",
        "      <Output TaskParameter=\"Include\" ItemName=\"InternalsVisibleToAttribute\" />",
        "    </CreateItem>",
        "    ",
        "    <WriteCodeFragment",
        "        AssemblyAttributes=\"@(InternalsVisibleToAttribute)\"",
        "        Language=\"$(Language)\"",
        "        OutputFile=\"$(GeneratedInternalsVisibleToFile)\">",
        "      <Output TaskParameter=\"OutputFile\" ItemName=\"Compile\" />",
        "      <Output TaskParameter=\"OutputFile\" ItemName=\"FileWrites\" />",
        "    </WriteCodeFragment>",
        "",
        "  </Target>",
        "</Project>"
      ]
    },
    {
      "name": "VSX.References.targets",
      "use": "build",
      "lines": [
        "<?xml version=\"1.0\" encoding=\"utf-8\"?>",
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "",
        "  <Choose>",
        "    <When Condition=\"'$(ProjectSubType)' == 'Library'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>true</IncludeDefaultReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'PortableLibrary'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>false</IncludeDefaultReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'WpfLibrary'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>true</IncludeDefaultReferences>",
        "        <IncludeWpfReferences>true</IncludeWpfReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'WpfApplication'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>true</IncludeDefaultReferences>",
        "        <IncludeWpfReferences>true</IncludeWpfReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'PowerShell'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>true</IncludeDefaultReferences>",
        "        <IncludePowerShellReferences>true</IncludePowerShellReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'Vsix'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>true</IncludeDefaultReferences>",
        "        <IncludeVsixReferences>true</IncludeVsixReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'VSPackage'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>true</IncludeDefaultReferences>",
        "        <IncludeVSPackageReferences>true</IncludeVSPackageReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'MSBuildTask'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>true</IncludeDefaultReferences>",
        "        <IncludeMSBuildReferences>true</IncludeMSBuildReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'Console'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>true</IncludeDefaultReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)' == 'VisualStudio'\">",
        "      <PropertyGroup>",
        "        <IncludeDefaultReferences>false</IncludeDefaultReferences>",
        "        <IncludeVisualStudioReferences>true</IncludeVisualStudioReferences>",
        "      </PropertyGroup>",
        "    </When>",
        "  </Choose>",
        "  ",
        "",
        "  <Choose>",
        "    <When Condition=\"'$(IncludeDefaultReferences)' == 'true'\">",
        "      <ItemGroup>",
        "",
        "        <!-- Framework -->",
        "        <Reference Include=\"Microsoft.CSharp\" />",
        "        <Reference Include=\"System\" />",
        "        <Reference Include=\"System.ComponentModel.Composition\" />",
        "        <Reference Include=\"System.Core\" />",
        "        <Reference Include=\"System.Xaml\" />",
        "        <Reference Include=\"System.Xml\" />",
        "        <Reference Include=\"System.Xml.Linq\" />",
        "",
        "      </ItemGroup>",
        "    </When>",
        "  </Choose>",
        "",
        "  <Choose>",
        "    <When Condition=\"'$(IncludeWpfReferences)' == 'true'\">",
        "      <ItemGroup>",
        "",
        "        <!-- Wpf -->",
        "        <Reference Include=\"CustomMarshalers\" />",
        "        <Reference Include=\"System.Configuration\" />",
        "        <Reference Include=\"System.Data\" />",
        "        <Reference Include=\"System.Design\" />",
        "        <Reference Include=\"System.Drawing\" />",
        "        <Reference Include=\"System.Web.ApplicationServices\" />",
        "        <Reference Include=\"System.Web.Extensions\" />",
        "        <Reference Include=\"System.Windows.Forms\" />",
        "        <Reference Include=\"PresentationFramework\" />",
        "        <Reference Include=\"PresentationCore\" />",
        "        <Reference Include=\"WindowsBase\" />",
        "",
        "      </ItemGroup>",
        "    </When>",
        "  </Choose>",
        "",
        "  <Choose>",
        "    <When Condition=\"'$(IncludeMSBuildReferences)' == 'true'\">",
        "      <ItemGroup>",
        "        <Reference Include=\"Microsoft.Build\" />",
        "        <Reference Include=\"Microsoft.Build.Framework\" />",
        "        <Reference Include=\"Microsoft.Build.Utilities.Core\" />",
        "        <Reference Include=\"Microsoft.Build.Tasks.Core\" />",
        "      </ItemGroup>",
        "    </When>",
        "  </Choose>",
        "   ",
        "  <Choose>",
        "    <When Condition=\"'$(IncludePowerShellReferences)' == 'true'\">",
        "      <ItemGroup>",
        "        <Reference Include=\"System.Management\" />",
        "        <Reference Include=\"System.Management.Automation\" />",
        "        <Reference Include=\"Microsoft.Management.Infrastructure\" />",
        "      </ItemGroup>",
        "    </When>",
        "  </Choose>",
        "  ",
        "  <Choose>",
        "    <When Condition=\"'$(IncludeVsixReferences)' == 'true'\">",
        "      <ItemGroup>",
        "      </ItemGroup>",
        "    </When>",
        "  </Choose>",
        "",
        "  <Choose>",
        "    <When Condition=\"'$(IncludeVSPackageReferences)' == 'true'\">",
        "      <ItemGroup>",
        "        <Reference Include=\"System.Design\" />",
        "      </ItemGroup>",
        "    </When>",
        "  </Choose>",
        "",
        "</Project>"
      ]
    },
    {
      "name": "VSX.Settings.props",
      "use": "build",
      "lines": [
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "",
        "  <PropertyGroup>",
        "",
        "    <!-- Establish Design-Time Context-->",
        "    <VisualStudioVersion>15.0</VisualStudioVersion>",
        "    <MinimumVisualStudioVersion>$(VisualStudioVersion)</MinimumVisualStudioVersion>",
        "",
        "    <!-- Get the root folder for the whole solution so we have an established point of reference -->",
        "    <RepositoryRootDirectory>$(MSBuildThisFileDirectory)..\\..\\</RepositoryRootDirectory>",
        "    <RepositoryRootDirectory>$([System.IO.Path]::GetFullPath('$(RepositoryRootDirectory)'))</RepositoryRootDirectory>",
        "",
        "    <!-- Set this now, in case we are building from the commandline -->",
        "    <SolutionDir Condition=\"$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'\">$(RepositoryRootDirectory)</SolutionDir>",
        "",
        "    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>",
        "    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>",
        "",
        "    <!-- Provide Easy Access to Top-Level folder structure for convenience. -->",
        "    <BinariesDir>$(RepositoryRootDirectory)Binaries\\</BinariesDir>",
        "    <ObjDir>$(BinariesDir)Obj\\</ObjDir>",
        "    <BuildDir>$(RepositoryRootDirectory)Build\\</BuildDir>",
        "    <TargetsDir>$(RepositoryRootDirectory)Build\\Targets\\</TargetsDir>",
        "    <StrongNameKeyDir>$(RepositoryRootDirectory)Build\\Strong Name Keys\\</StrongNameKeyDir>",
        "    <SrcDir>$(RepositoryRootDirectory)Src\\</SrcDir>",
        "    <ToolsDir>$(RepositoryRootDirectory)Tools\\</ToolsDir>",
        "",
        "    <!-- For Reference, in case you want increase design-time capabilities. -->",
        "    <WpfProjectTypeGuids>{60dc8134-eba5-43b8-bcc9-bb4bc16c2548};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</WpfProjectTypeGuids>",
        "    <VsixProjectTypeGuids>{82b43b9b-a64c-4715-b499-d71e9ca2bd60};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</VsixProjectTypeGuids>",
        "    <VSPackageProjectTypeGuids>{60dc8134-eba5-43b8-bcc9-bb4bc16c2548};{82b43b9b-a64c-4715-b499-d71e9ca2bd60};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</VSPackageProjectTypeGuids>",
        "",
        "    <DebugSymbols>true</DebugSymbols>",
        "    <DebugType>full</DebugType>",
        "    <Optimize>false</Optimize>",
        "    <HighEntropyVA>true</HighEntropyVA>",
        "    <FileAlignment>512</FileAlignment>",
        "    <DefineConstants>DEBUG;TRACE</DefineConstants>",
        "    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>",
        "    <ErrorReport>prompt</ErrorReport>",
        "    <WarningLevel>4</WarningLevel>",
        "    <GenerateSerializationAssemblies>off</GenerateSerializationAssemblies>",
        "",
        "  </PropertyGroup>",
        "",
        "  <!-- Outputs -->",
        "",
        "  <PropertyGroup>",
        "    <OutDir>$(BinariesDir)$(Configuration)\\$(MSBuildProjectName)\\</OutDir>",
        "  </PropertyGroup>",
        "",
        "  <Choose>",
        "    <When Condition=\"'$(ProjectSubType)'=='Vsix'\">",
        "      <PropertyGroup>",
        "        <OutDir>$(OutDir)Vsix\\</OutDir>",
        "      </PropertyGroup>",
        "    </When>",
        "    <When Condition=\"'$(ProjectSubType)'=='VSTemplate'\">",
        "      <PropertyGroup>",
        "        <OutDir>$(BinariesDir)Templates\\</OutDir>",
        "      </PropertyGroup>",
        "    </When>",
        "  </Choose>",
        "",
        "  <PropertyGroup>",
        "    <OutputPath>$(OutDir)</OutputPath>",
        "    <ObjDir>$(BinariesDir)Obj\\</ObjDir>",
        "    <IntermediateOutputPath>$(ObjDir)$(MSBuildProjectName)\\</IntermediateOutputPath>",
        "  </PropertyGroup>",
        "",
        "  <!-- Common Default Properties -->",
        "  <PropertyGroup>",
        "    <OutputType Condition=\"'$(OutputType)'==''\">Library</OutputType>",
        "    <FileAlignment Condition=\"'$(FileAlignment)'==''\">512</FileAlignment>",
        "    <ErrorReport Condition=\"'$(ErrorReport)'==''\">prompt</ErrorReport>",
        "    <AssemblyName Condition=\"'$(AssemblyName)'==''\">$(MSBuildProjectName)</AssemblyName>",
        "    <RootNamespace Condition=\"'$(RootNamespace)'==''\">$(MSBuildProjectName)</RootNamespace>",
        "    <Deterministic Condition=\"'$(Deterministic)'==''\">true</Deterministic>",
        "    <HighEntropyVA Condition=\"'$(HighEntropyVA)'==''\">true</HighEntropyVA>",
        "    <WarningLevel Condition=\"'$(WarningLevel)'==''\">4</WarningLevel>",
        "    <GenerateSerializationAssemblies Condition=\"'$(GenerateSerializationAssemblies)'==''\">off</GenerateSerializationAssemblies>",
        "  </PropertyGroup>",
        "",
        "  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \"/>",
        "  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \"/>",
        "",
        "  <PropertyGroup>",
        "    <SignAssembly Condition=\"'$(SignAssembly)'==''\">false</SignAssembly>",
        "    <AssemblyOriginatorKeyFile></AssemblyOriginatorKeyFile>",
        "    <PublicKey></PublicKey>",
        "  </PropertyGroup>",
        "",
        "  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\"",
        "        Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />",
        "",
        "</Project>"
      ]
    },
    {
      "name": "VSX.VsSDK.targets",
      "use": "build",
      "lines": [
        "<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
        "",
        "  <PropertyGroup>",
        "    <VSToolsPath Condition=\"'$(VSToolsPath)' == ''\">$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)</VSToolsPath>",
        "  </PropertyGroup>",
        "",
        "  <Choose>",
        "    <When Condition=\"'$(DebugVsixProject)'=='true'\">",
        "      <PropertyGroup>",
        "        <StartAction>Program</StartAction>",
        "        <StartProgram>C:\\Program Files %28x86%29\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\devenv.exe</StartProgram>",
        "        <StartArguments>/rootsuffix Exp</StartArguments>",
        "      </PropertyGroup>",
        "    </When>",
        "  </Choose>",
        "",
        "  <PropertyGroup>",
        "    <GetVsixSourceItemsDependsOn>$(GetVsixSourceItemsDependsOn);IncludeVsixLocalOnlyItems</GetVsixSourceItemsDependsOn>",
        "  </PropertyGroup>",
        "",
        "  <Target Name=\"IncludeVsixLocalOnlyItems\">",
        "    <!-- This is shamelessly ripped from Microsoft.VsSDK.targets -->",
        "    <ItemGroup>",
        "      <VSIXSourceItemLocalOnly Include=\"@(Content)\" Condition=\"'%(Content.IncludeInVSIXLocalOnly)'=='true' AND '%(Content.VSIXSubPath)'==''\">",
        "        <!-- Sets VSIXSubPath for content items that are nonlinked files -->",
        "        <VSIXSubPath Condition=\"'%(Content.Link)'==''\">%(Content.RelativeDir)</VSIXSubPath>",
        "        <!-- Sets VSIXSubPath for content items that are linked files -->",
        "        <VSIXSubPath Condition=\"'%(Content.Link)'!=''\">$([System.IO.Path]::GetDirectoryName(%(Content.Link)))</VSIXSubPath>",
        "      </VSIXSourceItemLocalOnly>",
        "",
        "      <VSIXSourceItemLocalOnly Include=\"@(Content)\" Condition=\"'%(Content.IncludeInVSIXLocalOnly)'=='true' AND '%(Content.VSIXSubPath)'!=''\" />",
        "    </ItemGroup>",
        "  </Target>",
        "",
        "  <PropertyGroup>",
        "    <GetVsixSourceItemsDependsOn>$(GetVsixSourceItemsDependsOn);IncludeNuGetResolvedAssets</GetVsixSourceItemsDependsOn>",
        "  </PropertyGroup>",
        "",
        "  <Target Name=\"IncludeNuGetResolvedAssets\" DependsOnTargets=\"ResolveNuGetPackageAssets\" Condition=\"'@(NuGetPackageToIncludeInVsix)' != ''\">",
        "    <ItemGroup>",
        "      <_ReferenceCopyLocalPathsWithPotentialInclusions Include=\"@(ReferenceCopyLocalPaths)\">",
        "        <NuGetPackageToIncludeInVsix>%(NuGetPackageToIncludeInVsix.Identity)</NuGetPackageToIncludeInVsix>",
        "      </_ReferenceCopyLocalPathsWithPotentialInclusions>",
        "",
        "      <VSIXCopyLocalReferenceSourceItem Include=\"@(_ReferenceCopyLocalPathsWithPotentialInclusions)\"",
        "        Condition=\"'%(_ReferenceCopyLocalPathsWithPotentialInclusions.NuGetPackageId)' == '%(_ReferenceCopyLocalPathsWithPotentialInclusions.NuGetPackageToIncludeInVsix)' and",
        "                   '%(_ReferenceCopyLocalPathsWithPotentialInclusions.Extension)' != '.pdb'\">",
        "        <ForceIncludeInVsix>true</ForceIncludeInVsix>",
        "        <Private>true</Private>",
        "      </VSIXCopyLocalReferenceSourceItem>",
        "    </ItemGroup>",
        "  </Target>",
        "",
        "  <ItemDefinitionGroup>",
        "    <NuGetPackageToIncludeInVsix>",
        "      <Visible>false</Visible>",
        "    </NuGetPackageToIncludeInVsix>",
        "  </ItemDefinitionGroup>",
        "",
        "  <ItemDefinitionGroup>",
        "    <Reference>",
        "      <Private>true</Private>",
        "      <ForceIncludeInVsix>true</ForceIncludeInVsix>",
        "    </Reference>",
        "  </ItemDefinitionGroup>",
        "",
        "",
        "  <Import Project=\"$(VSToolsPath)\\VSSDK\\Microsoft.VsSDK.targets\" Condition=\"'$(VSToolsPath)' != ''\" />",
        "  ",
        "</Project>"
      ]
    }
  ]
}
